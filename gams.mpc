project (gams) : using_madara, using_ace, using_utm, using_ros, vrep_lib, ros_lib, port/java/using_android, port/java/using_java, port/java/using_openjdk, using_nortti {
  libout = lib
  sharedname = GAMS
  includes += src
  dynamicflags += GAMS_BUILD_DLL _USE_MATH_DEFINES

  verbatim (gnuace, local) {
    CPPFLAGS +=
  }

  Documentation_Files {
    INSTALL.txt
    LICENSE.txt
    README.txt
    VERSION.txt
  }

  Build_Files {
    default.features
    gams.mpc
    gams.mwc
    using_ace.mpb
    using_madara.mpb
    using_gams.mpb
    using_utm.mpb
    using_vrep.mpb
    using_nortti.mpb
    using_ros.mpb
    vrep_lib.mpb
    ros_lib.mpb
  }

  Header_Files {

    Algorithms {
      src/gams/algorithms
    }

    Area_Coverage {
      src/gams/algorithms/area_coverage
    }

    Auctions {
      src/gams/auctions
    }
    
    Controllers {
      src/gams/controllers
    }

    Elections {
      src/gams/elections
    }

    Future {
      src/gams/formations
      src/gams/time
    }

    Groups {
      src/gams/groups
    }
    
    Loggers {
      src/gams/loggers
    }

    Maps {
      src/gams/maps
    }
    
    Platforms {
      src/gams/platforms
    }

    Pose {
      src/gams/pose
    }

    Utility {
      src/gams/utility
    }

    Variables {
      src/gams/variables
    }

    src/gams

    src/dmpl
  }

  Source_Files {

    Algorithms {
      src/gams/algorithms
    }

    Area_Coverage {
      src/gams/algorithms/area_coverage
    }

    Auctions {
      src/gams/auctions
    }
    
    Controllers {
      src/gams/controllers
    }

    Elections {
      src/gams/elections
    }
    
    Future {
      src/gams/formations
      src/gams/time
    }

    Groups {
      src/gams/groups
    }

    Loggers {
      src/gams/loggers
    }

    Maps {
      src/gams/maps
    }
    
    Platforms {
      src/gams/platforms
    }

    Pose {
      src/gams/pose
    }

    Utility {
      src/gams/utility
    }

    Variables {
      src/gams/variables
    }

    src/gams
  }

  Inline_Files {

    Algorithms {
      src/gams/algorithms
    }

    Area_Coverage {
      src/gams/algorithms/area_coverage
    }

    Auctions {
      src/gams/auctions
    }
    
    Controllers {
      src/gams/controllers
    }

    Elections {
      src/gams/elections
    }
    
    Future {
      src/gams/formations
      src/gams/time
    }

    Groups {
      src/gams/groups
    }
    
    Loggers {
      src/gams/loggers
    }

    Maps {
      src/gams/maps
    }
    
    Platforms {
      src/gams/platforms
    }

    Pose {
      src/gams/pose
    }

    Utility {
      src/gams/utility
    }

    Variables {
      src/gams/variables
    }

    src/gams
  }
}

project (gams_jar) : using_gams, using_madara, using_ace {
  requires += java

  prebuild += "$(JAVA_HOME)/bin/javac" -classpath $(MADARA_ROOT)/lib/madara.jar -sourcepath port/java/src port/java/src/com/gams/tests/*.java port/java/src/com/gams/*.java port/java/src/com/gams/logger/*.java port/java/src/com/gams/variables/*.java port/java/src/com/gams/utility/*.java port/java/src/com/gams/platforms/*.java port/java/src/com/gams/algorithms/*.java port/java/src/com/gams/controllers/*.java
  postbuild += "$(JAVA_HOME)/bin/jar" cf lib/gams.jar -C port/java/src .

  Documentation_Files {
    port/java/src/*.java
    port/java/src/com/gams/*.java
    port/java/src/com/gams/algorithms/*.java
    port/java/src/com/gams/controllers/*.java
    port/java/src/com/gams/platforms/*.java
    port/java/src/com/gams/variables/*.java
  }
  
  Build_Files {
    gams.mpc
    port/java
  }

  Header_Files {
  }

  Source_Files {
  }
}

project (gams_controller) : using_gams, using_madara, using_ace, using_vrep {
  exeout = $(GAMS_ROOT)/bin
  exename = gams_controller
  
  macros +=  _USE_MATH_DEFINES

  Documentation_Files {
  }
  
  Build_Files {
    using_gams.mpb
    gams.mpc
  }

  Header_Files {
  }

  Source_Files {
    src/gams/programs/gams_controller.cpp
  }
}

project (ros2gams) : using_madara, using_ace, using_ros, using_gams {
  exeout = $(GAMS_ROOT)/bin
  exename = ros2gams
  libpaths += $(ROS_ROOT)/../../lib

  requires += ros

  macros +=  _USE_MATH_DEFINES

  libs += roscpp
  libs += cpp_common
  libs += roscpp_serialization
  libs += rostime
  libs += rosbag
  libs += rosbag_storage

  verbatim (gnuace, local) {
    CPPFLAGS += -std=c++11
  }

  Documentation_Files {
  }

  Build_Files {
    using_gams.mpb
    gams.mpc
  }
                                                                
  Header_Files {
  }

  Source_Files {
    src/gams/programs/ros2gams.cpp
  }
}
